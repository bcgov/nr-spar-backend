name: CI

on:
  push:
    branches:
      - '*'
      - '*/*'
      - '**'
    tags-ignore:
      - '**'
    paths:
      - "backend/**"
      - ".github/workflows/ci.yml"
    paths-ignore:
      - "**.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Code validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Code Validation
        run: mvn --no-transfer-progress validate --file backend/pom.xml

      - name: Code Compilation
        run: mvn --no-transfer-progress clean compile --file backend/pom.xml

      - name: Checkstyle
        run: mvn --no-transfer-progress checkstyle:checkstyle -Dcheckstyle.skip=false --file backend/pom.xml

      - name: Archive Checkstyle
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle
          path: backend/target/site/checkstyle.html
          retention-days: 5

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs:
      - validate
    steps:
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Unit Tests
        run: mvn --no-transfer-progress test --file backend/pom.xml

      - name: Integration Tests
        run: mvn --no-transfer-progress verify -P integration-test --file backend/pom.xml

      - name: Code Coverage
        run: mvn --no-transfer-progress clean verify -P all-tests --file backend/pom.xml

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        id: jacoco
        with:
          generate-branches-badge: true
          jacoco-csv-file: backend/target/coverage-reports/merged-test-report/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit the badge (if it changed)
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Ci Bot
          author_email: cibot@users.noreply.github.com
          message: 'ci: autogenerated JaCoCo coverage badge'
          add: '*.svg'

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: backend/target/coverage-reports/merged-test-report/

      - name: QualityGate
        run: mvn --no-transfer-progress clean verify package -P all-tests sonar:sonar -Dsonar.projectKey=bcgov_nr-spar-backend -Dsonar.coverage.jacoco.xmlReportPaths=backend/target/coverage-reports/merged-test-report/jacoco.xml --file backend/pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security:
    name: Security checks
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    needs:
      - tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-test-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          debug: true
          languages: java

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Code Compilation
        run: mvn --no-transfer-progress clean compile --file backend/pom.xml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    needs:
      - security
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          debug: true
          languages: java

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
