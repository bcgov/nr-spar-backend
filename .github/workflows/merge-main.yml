name: Merge to Main

on:
  pull_request:
#  push:
#    branches:
#      - main
#    paths-ignore:
#      - ".github/ISSUE_TEMPLATE/*"
#      - "**.md"
#  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  deploy-test:
    name: TEST Deployment
    environment: test
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [ init, database, backend ]
        include:
          - name: init
            file: common/openshift.init.yml
            overwrite: false
          - name: database
            file: database/openshift.deploy.yml
            overwrite: false
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=2 -p BUILD=test
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.0.3
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          verification_path: "actuator/health"
          parameters:
            -p ZONE=test -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:test
            ${{ matrix.parameters }}

  api-tests:
    name: Newman API tests runner
    needs:
      - deploy-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Make Directory for Test Results
        run: mkdir -p testArtifacts

      - name: Run Postman Collection
        run: |
          newman run test/postman/starting-api.postman_collection.json -e test/postman/starting-api.postman_environment.json \
            --env-var "releaseVer=test=${{ env.NR_SPAR_BACKEND_VERSION }}" \
            --env-var "authServer=${{ secrets.KEYCLOAK_SERVER_REALM }}" \
            --env-var "authClient=${{ secrets.KC_SERVICE_ACCOUNT_NAME }}" \
            --env-var "authClient=${{ secrets.KC_SERVICE_ACCOUNT_PASS }}" \
            --suppress-exit-code -r htmlextra --reporter-htmlextra-export testArtifacts/api-tests-report.html

      - name: Output the results
        uses: actions/upload-artifact@v3
        with:
          name: API test report
          path: testArtifacts

  deploy-prod:
    name: PROD Deployment
    needs:
      - api-tests
    environment: prod
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [ init, database, backend ]
        include:
          - name: init
            file: common/openshift.init.yml
            overwrite: false
          - name: database
            file: database/openshift.deploy.yml
            overwrite: false
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            parameters: -p BUILD=prod
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.0.3
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          verification_path: "actuator/health"
          parameters:
            -p ZONE=prod -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:test
            ${{ matrix.parameters }}

  image-promotions:
    name: Promote Images to PROD
    needs:
      - deploy-prod
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        component: [backend, database]
    steps:
      - uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: test
          tags: prod
