name: Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:

  artifact:
    name: Build artifact
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Cache Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-test-

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate Artifact
        run: mvn -B --no-transfer-progress clean package -DskipTests -Dtests.skip=true -Dskip.unit.tests=true --file pom.xml

      - name: Saving artifact
        uses: actions/upload-artifact@master
        with:
          name: service
          path: target/backend-start-api.jar
          retention-days: 1

  push_to_registry:
    name: Push Docker image
    runs-on: ubuntu-latest
    if: startsWith(github.ref_name,'v')
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Creating temp folder
        run: mkdir -p target/

      - name: Getting artifact
        uses: actions/download-artifact@v3
        with:
          name: service
          path: target/

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96
        with:
          images: |
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image Scan
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: ghcr.io/${{ github.repository }}
          ignore-unfixed: true
          severity: CRITICAL
          format: 'sarif'
          output: 'docker-result.sarif'

      - name: Upload Security results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        continue-on-error: true
        with:
          sarif_file: "docker-result.sarif"
