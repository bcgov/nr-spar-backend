apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${NAME}
  annotations:
    description: "NR SPAR Backend"
    tags: "nr-spar-backend,backend"
    iconClass: icon-java
labels:
  app: ${NAME}-${ZONE}
  app.kubernetes.io/part-of: ${NAME}-${ZONE}
parameters:
  - name: NAME
    description: Module name
    value: nr-spar-backend
  - name: COMPONENT
    description: Component name
    value: backend
  - name: ZONE
    description: Deployment zone, e.g. pr-### or prod
    required: true
  - name: IMAGE_TAG
    description: Image tag to use
    value: latest
  - name: DOMAIN
    value: apps.silver.devops.gov.bc.ca
  - name: CPU_REQUEST
    value: "75m"
  - name: MEMORY_REQUEST
    value: "256Mi"
  - name: CPU_LIMIT
    value: "200m"
  - name: MEMORY_LIMIT
    value: "512Mi"
  - name: MIN_REPLICAS
    description: The minimum amount of replicas for the horizontal pod autoscaler.
    value: "3"
  - name: MAX_REPLICAS
    description: The maximum amount of replicas for the horizontal pod autoscaler.
    value: "5"
  - name: REGISTRY
    description: Container registry to import from (internal is image-registry.openshift-image-registry.svc:5000)
    value: ghcr.io
  - name: PROMOTE
    description: Image (namespace/name:tag) to promote/import
    value: bcgov/nr-spar-backend:prod-backend
  - name: BUILD
    description: Current SPAR backend API build version
    required: true
    value: nightly
  # Parameters for logging sidecar
  - name: LOGGING_CPU_LIMIT
    description: Limit Peak CPU per pod (in millicores ex. 1000m)
    displayName: CPU Limit
    value: 100m
  - name: LOGGING_CPU_REQUEST
    description: Requested CPU per pod (in millicores ex. 500m)
    displayName: CPU Request
    value: 10m
  - name: LOGGING_MEMORY_LIMIT
    description: Limit Peak Memory per pod (in gigabytes Gi or megabytes Mi ex. 2Gi)
    displayName: Memory Limit
    value: 64Mi
  - name: LOGGING_MEMORY_REQUEST
    description: Requested Memory per pod (in gigabytes Gi or megabytes Mi ex. 500Mi)
    displayName: Memory Request
    value: 16Mi
  # Parameters for file caching
  - name: FILE_CACHE_VOLUME_CAPACITY
    description: Volume space available for File Cache
    displayName: File Cache Volume Capacity (use M or G, not Mi or Gi)
    required: false
    value: 2G
  - name: FILE_CACHE_PERSISTENT_VOLUME_CLASS
    description: The storage class of the volume
    displayName: Persistent Volume Class name
    required: false
    value: netapp-file-standard
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: ${IMAGE_TAG}
          from:
            kind: DockerImage
            name: ${REGISTRY}/${PROMOTE}
          referencePolicy:
            type: Local
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      replicas: 1
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              name: ${NAME}-${ZONE}-${COMPONENT}:${IMAGE_TAG}
      selector:
        deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            app: ${NAME}-${ZONE}
            deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
        spec:
          containers:
            - name: ${NAME}
              image: ${NAME}-${ZONE}-${COMPONENT}:${IMAGE_TAG}
              imagePullPolicy: Always
              volumeMounts:
                - name: log-storage
                  mountPath: /logs
              env:
                - name: NR_SPAR_BACKEND_VERSION
                  value: ${BUILD}
                - name: ALLOWED_ORIGINS
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: allowed_origins
                - name: KEYCLOAK_REALM_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: keycloak-realm-url
                - name: POSTGRESQL_HOST
                  value: ${NAME}-${ZONE}-database
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-database
                      key: database-name
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-database
                      key: database-password
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${ZONE}-database
                      key: database-user
                - name: FORESTCLIENTAPI_ADDRESS
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: forest-client-api.address
                - name: FORESTCLIENTAPI_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: forest-client-api.key
              ports:
                - containerPort: 8090
                  protocol: TCP
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              readinessProbe:
                successThreshold: 1
                failureThreshold: 5
                httpGet:
                  path: /actuator/health
                  port: 8090
                  scheme: HTTP
                initialDelaySeconds: 150
                periodSeconds: 15
                timeoutSeconds: 10
              livenessProbe:
                successThreshold: 1
                failureThreshold: 5
                httpGet:
                  path: /actuator/health
                  port: 8090
                  scheme: HTTP
                initialDelaySeconds: 150
                periodSeconds: 30
                timeoutSeconds: 10
            - name: fluent-bit
              image: docker.io/fluent/fluent-bit:1.8
              imagePullPolicy: Always
              livenessProbe:
                httpGet:
                  path: /
                  port: 2020
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
              ports:
                - containerPort: 2020
                  name: metrics
                  protocol: TCP
                - containerPort: 80
                  name: http-plugin
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /
                  port: 2020
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
              resources:
                requests:
                  cpu: "${LOGGING_CPU_REQUEST}"
                  memory: "${LOGGING_MEMORY_REQUEST}"
                limits:
                  cpu: "${LOGGING_CPU_LIMIT}"
                  memory: "${LOGGING_MEMORY_LIMIT}"
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      key: username
                      name: "${APP_NAME}-aws-kinesis-secret"
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: "${APP_NAME}-aws-kinesis-secret"
              volumeMounts:
                # mount log file location
                - name: log-storage
                  mountPath: /logs
                # mount fluent-bit config file
                - name: fluent-bit-config
                  mountPath: /fluent-bit/etc/
                # TLS cert for connecting to fluentd (enable for TLS)
                # - mountPath: /fluent-bit/ssl
                #   name: fluent-bit-tls
          volumes:
            - name: file-cache-data
              persistentVolumeClaim:
                claimName: file-cache-data-${ZONE}
            - name: log-storage
              emptyDir: {}
            # fluent-bit config file
            - name: fluent-bit-config
              configMap:
                name: fluent-bit-config
            # fluent-bit TLS (enable for TLS)
            # - name: fluent-bit-tls
            #   secret:
            #     secretName: fluent-bit-tls
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: file-cache-data-${ZONE}
    spec:
      accessModes:
        - ReadWriteMany
      storageClassName: ${FILE_CACHE_PERSISTENT_VOLUME_CLASS}
      resources:
        requests:
          storage: "${FILE_CACHE_VOLUME_CAPACITY}"
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      ports:
        - name: 8090-tcp
          protocol: TCP
          port: 80
          targetPort: 8090
      selector:
        deploymentconfig: ${NAME}-${ZONE}-${COMPONENT}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}-${ZONE}
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      host: ${NAME}-${ZONE}-${COMPONENT}.${DOMAIN}
      port:
        targetPort: 8090-tcp
      to:
        kind: Service
        name: ${NAME}-${ZONE}-${COMPONENT}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${NAME}-${ZONE}-${COMPONENT}
    spec:
      scaleTargetRef:
        apiVersion: apps.openshift.io/v1
        kind: DeploymentConfig
        name: ${NAME}-${ZONE}-${COMPONENT}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 100
